package com.example.serializationdemo;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import android.annotation.SuppressLint;
import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.Toast;


@SuppressLint("SdCardPath")
public class SeralizeActivity extends Activity {
  Button button;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_seralize);
		  button=(Button)findViewById(R.id.button1);
		  
		  button.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				Employee emp=new Employee();
				emp.setId(1001);
				emp.setName("Mayra");
				emp.setSalary(100000);
				emp.setDesignation("Marketing Manager");
				
				   saveObject(emp);
				
				Employee emp1 = (Employee)loadSerializedObject(new File("/sdcard/save_object.bin")); //get the serialized object from the sdcard and caste it into the Person class.
			        System.out.println("Name : " + emp1.getName());		
			        
			        Toast.makeText(SeralizeActivity.this, "Seralization Completed....", Toast.LENGTH_SHORT).show();
			}
		});				
	}

	private void saveObject(Employee emp) {
		 try
         {
            ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(new File("/sdcard/save_object.bin"))); //Select where you wish to save the file...
            oos.writeObject(emp); // write the class as an 'object'
            oos.flush(); // flush the stream to insure all of the information was written to 'save_object.bin'
            oos.close();// close the stream
         }
         catch(Exception ex)
         {
            Log.v("Serialization Save Error : ",ex.getMessage());
            ex.printStackTrace();
         }
		
	}

	@SuppressWarnings("resource")
	private Object loadSerializedObject(File file) {
		try
        {
            ObjectInputStream ois = new ObjectInputStream(new FileInputStream(file));
            Object o = ois.readObject();
            return o;
        }
        catch(Exception ex)
        {
        Log.v("Serialization Read Error : ",ex.getMessage());
            ex.printStackTrace();
        }
        return null;
	}

}
